openapi: 3.0.0
info:
  title: User API
  version: 1.0.0
tags:
  - name: Users
    description: User management
paths:
  /api/users/add:
    post:
      summary: Add a new user
      description: Create a new user.
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, email, password, phone]
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                phone:
                  type: string
                avatar_url:
                  type: string
              example:
                name: John Doe
                email: john@example.com
                password: password123
                phone: "09445792240"
                avatar_url: /uploads/avatar/default.png
      responses:
        '201':
          description: User added successfully.
        '500':
          description: Error adding user.

  /api/users/upload-avatar/{id}:
    post:
      summary: Upload a user avatar
      description: Upload an avatar image for a specific user.
      tags: [Users]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                avatar:
                  type: string
                  format: binary
      responses:
        '201':
          description: Avatar updated successfully.
        '400':
          description: No file uploaded.
        '500':
          description: Error uploading avatar.

  /api/users/edit/{id}:
    put:
      summary: Edit a user
      description: Update user details by user ID.
      tags: [Users]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                name: John Doe Updated
                email: john_updated@example.com
      responses:
        '200':
          description: User updated successfully.
        '500':
          description: Error updating user.

  /api/users/delete/{id}:
    delete:
      summary: Delete a user
      description: Delete a user by user ID.
      tags: [Users]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User deleted successfully.
        '500':
          description: Error deleting user.

  /api/users/search:
    get:
      summary: Search for a user
      description: Search users by email or name with pagination.
      tags: [Users]
      parameters:
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Returns a list of users matching the search query.
        '500':
          description: Error fetching user details.

  /api/users:
    get:
      summary: Get all users
      description: Retrieve a paginated list of all users.
      tags: [Users]
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: List of users.
        '500':
          description: Error fetching users.